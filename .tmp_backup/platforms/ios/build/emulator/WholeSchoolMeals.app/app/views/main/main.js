"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var frame_1 = require("ui/frame");
var platform_1 = require("platform");
function onLoaded(args) {
    if (platform_1.isIOS) {
        var navigationBar = frame_1.topmost().ios.controller.navigationBar;
        navigationBar.barStyle = 1 /* Black */;
    }
}
exports.onLoaded = onLoaded;
function openDrawer() {
    var drawer = (frame_1.topmost().getViewById("settings-menu"));
    drawer.gesturesEnabled = true;
    drawer.showDrawer();
}
exports.openDrawer = openDrawer;
function drawerClosed(args) {
    var drawer = args.object;
    drawer.gesturesEnabled = false;
}
exports.drawerClosed = drawerClosed;
function drawerLoaded(args) {
    var drawer = args.object;
    drawer.gesturesEnabled = false;
    if (!drawer.autoCloseAssigned) {
        drawer.autoCloseAssigned = true;
        drawer.page.on("navigatedFrom", function (args) {
            drawer.closeDrawer();
        });
        if (drawer.ios) {
            drawer.ios.defaultSideDrawer.style.shadowMode = 2;
            drawer.ios.defaultSideDrawer.style.dimOpacity = 0.12;
            drawer.ios.defaultSideDrawer.style.shadowOpacity = 0.75;
            drawer.ios.defaultSideDrawer.style.shadowRadius = 5;
            drawer.ios.defaultSideDrawer.transitionDuration = 0.25;
        }
    }
}
exports.drawerLoaded = drawerLoaded;
function schoolsTap() {
    var navigationEntry = {
        moduleName: "views/schools/schools",
        context: { settings: true },
        animated: false
    };
    frame_1.topmost().navigate(navigationEntry);
}
exports.schoolsTap = schoolsTap;
function allergensTap() {
    var navigationEntry = {
        moduleName: "views/allergens/allergens",
        context: { settings: true },
        animated: false
    };
    frame_1.topmost().navigate(navigationEntry);
}
exports.allergensTap = allergensTap;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIm1haW4udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFFQSxrQ0FBbUM7QUFDbkMscUNBQXdEO0FBR3hELGtCQUF5QixJQUFlO0lBQ3BDLEVBQUUsQ0FBQyxDQUFDLGdCQUFLLENBQUMsQ0FBQyxDQUFDO1FBQ1IsSUFBSSxhQUFhLEdBQUcsZUFBTyxFQUFFLENBQUMsR0FBRyxDQUFDLFVBQVUsQ0FBQyxhQUFhLENBQUM7UUFDM0QsYUFBYSxDQUFDLFFBQVEsR0FBRyxhQUFnQixDQUFDO0lBQzlDLENBQUM7QUFDTCxDQUFDO0FBTEQsNEJBS0M7QUFFRDtJQUNJLElBQUksTUFBTSxHQUFpQyxDQUFDLGVBQU8sRUFBRSxDQUFDLFdBQVcsQ0FBQyxlQUFlLENBQUMsQ0FBQyxDQUFDO0lBQ3BGLE1BQU0sQ0FBQyxlQUFlLEdBQUcsSUFBSSxDQUFDO0lBQzlCLE1BQU0sQ0FBQyxVQUFVLEVBQUUsQ0FBQztBQUN4QixDQUFDO0FBSkQsZ0NBSUM7QUFFRCxzQkFBNkIsSUFBSTtJQUM3QixJQUFJLE1BQU0sR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDO0lBQ3pCLE1BQU0sQ0FBQyxlQUFlLEdBQUcsS0FBSyxDQUFDO0FBQ25DLENBQUM7QUFIRCxvQ0FHQztBQUVELHNCQUE2QixJQUFJO0lBQ2hDLElBQUksTUFBTSxHQUFHLElBQUksQ0FBQyxNQUFNLENBQUM7SUFDdEIsTUFBTSxDQUFDLGVBQWUsR0FBRyxLQUFLLENBQUM7SUFDbEMsRUFBRSxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsaUJBQWlCLENBQUMsQ0FBQyxDQUFDO1FBQy9CLE1BQU0sQ0FBQyxpQkFBaUIsR0FBRyxJQUFJLENBQUM7UUFDaEMsTUFBTSxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsZUFBZSxFQUFFLFVBQUMsSUFBSTtZQUNwQyxNQUFNLENBQUMsV0FBVyxFQUFFLENBQUM7UUFDdEIsQ0FBQyxDQUFDLENBQUM7UUFFSCxFQUFFLENBQUMsQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQztZQUNoQixNQUFNLENBQUMsR0FBRyxDQUFDLGlCQUFpQixDQUFDLEtBQUssQ0FBQyxVQUFVLEdBQUcsQ0FBQyxDQUFBO1lBQ2pELE1BQU0sQ0FBQyxHQUFHLENBQUMsaUJBQWlCLENBQUMsS0FBSyxDQUFDLFVBQVUsR0FBRyxJQUFJLENBQUM7WUFDNUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxpQkFBaUIsQ0FBQyxLQUFLLENBQUMsYUFBYSxHQUFHLElBQUksQ0FBQztZQUN4RCxNQUFNLENBQUMsR0FBRyxDQUFDLGlCQUFpQixDQUFDLEtBQUssQ0FBQyxZQUFZLEdBQUcsQ0FBQyxDQUFDO1lBQ3BELE1BQU0sQ0FBQyxHQUFHLENBQUMsaUJBQWlCLENBQUMsa0JBQWtCLEdBQUcsSUFBSSxDQUFDO1FBQ2pFLENBQUM7SUFDRixDQUFDO0FBQ0YsQ0FBQztBQWpCRCxvQ0FpQkM7QUFFRDtJQUNJLElBQUksZUFBZSxHQUFHO1FBQ2xCLFVBQVUsRUFBRSx1QkFBdUI7UUFDbkMsT0FBTyxFQUFFLEVBQUUsUUFBUSxFQUFFLElBQUksRUFBRTtRQUMzQixRQUFRLEVBQUUsS0FBSztLQUNsQixDQUFDO0lBQ0YsZUFBTyxFQUFFLENBQUMsUUFBUSxDQUFDLGVBQWUsQ0FBQyxDQUFDO0FBQ3hDLENBQUM7QUFQRCxnQ0FPQztBQUVEO0lBQ0ksSUFBSSxlQUFlLEdBQUc7UUFDbEIsVUFBVSxFQUFFLDJCQUEyQjtRQUN2QyxPQUFPLEVBQUUsRUFBRSxRQUFRLEVBQUUsSUFBSSxFQUFFO1FBQzNCLFFBQVEsRUFBRSxLQUFLO0tBQ2xCLENBQUM7SUFDRixlQUFPLEVBQUUsQ0FBQyxRQUFRLENBQUMsZUFBZSxDQUFDLENBQUM7QUFDeEMsQ0FBQztBQVBELG9DQU9DIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRXZlbnREYXRhIH0gZnJvbSBcImRhdGEvb2JzZXJ2YWJsZVwiO1xuaW1wb3J0IHsgaGFzS2V5IH0gZnJvbSBcImFwcGxpY2F0aW9uLXNldHRpbmdzXCI7XG5pbXBvcnQgeyB0b3Btb3N0IH0gZnJvbSBcInVpL2ZyYW1lXCI7XG5pbXBvcnQgeyBpc0lPUywgZGV2aWNlLCBwbGF0Zm9ybU5hbWVzIH0gZnJvbSBcInBsYXRmb3JtXCI7XG5pbXBvcnQgeyBSYWRTaWRlRHJhd2VyIH0gZnJvbSBcIm5hdGl2ZXNjcmlwdC10ZWxlcmlrLXVpL3NpZGVkcmF3ZXJcIjtcblxuZXhwb3J0IGZ1bmN0aW9uIG9uTG9hZGVkKGFyZ3M6IEV2ZW50RGF0YSkgeyAgIFxuICAgIGlmIChpc0lPUykge1xuICAgICAgICBsZXQgbmF2aWdhdGlvbkJhciA9IHRvcG1vc3QoKS5pb3MuY29udHJvbGxlci5uYXZpZ2F0aW9uQmFyO1xuICAgICAgICBuYXZpZ2F0aW9uQmFyLmJhclN0eWxlID0gVUlCYXJTdHlsZS5CbGFjaztcbiAgICB9XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBvcGVuRHJhd2VyKCkge1xuICAgIGxldCBkcmF3ZXI6IFJhZFNpZGVEcmF3ZXIgPSA8UmFkU2lkZURyYXdlcj4odG9wbW9zdCgpLmdldFZpZXdCeUlkKFwic2V0dGluZ3MtbWVudVwiKSk7XG4gICAgZHJhd2VyLmdlc3R1cmVzRW5hYmxlZCA9IHRydWU7XG4gICAgZHJhd2VyLnNob3dEcmF3ZXIoKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGRyYXdlckNsb3NlZChhcmdzKSB7XG4gICAgdmFyIGRyYXdlciA9IGFyZ3Mub2JqZWN0O1xuICAgIGRyYXdlci5nZXN0dXJlc0VuYWJsZWQgPSBmYWxzZTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGRyYXdlckxvYWRlZChhcmdzKSB7XG5cdHZhciBkcmF3ZXIgPSBhcmdzLm9iamVjdDtcbiAgICBkcmF3ZXIuZ2VzdHVyZXNFbmFibGVkID0gZmFsc2U7XG5cdGlmICghZHJhd2VyLmF1dG9DbG9zZUFzc2lnbmVkKSB7XG5cdFx0ZHJhd2VyLmF1dG9DbG9zZUFzc2lnbmVkID0gdHJ1ZTtcblx0XHRkcmF3ZXIucGFnZS5vbihcIm5hdmlnYXRlZEZyb21cIiwgKGFyZ3MpID0+IHtcblx0XHRcdGRyYXdlci5jbG9zZURyYXdlcigpO1xuXHRcdH0pO1xuXHRcdFxuXHRcdGlmIChkcmF3ZXIuaW9zKSB7XG5cdFx0XHRkcmF3ZXIuaW9zLmRlZmF1bHRTaWRlRHJhd2VyLnN0eWxlLnNoYWRvd01vZGUgPSAyXG5cdFx0XHRkcmF3ZXIuaW9zLmRlZmF1bHRTaWRlRHJhd2VyLnN0eWxlLmRpbU9wYWNpdHkgPSAwLjEyO1xuICAgICAgICAgICAgZHJhd2VyLmlvcy5kZWZhdWx0U2lkZURyYXdlci5zdHlsZS5zaGFkb3dPcGFjaXR5ID0gMC43NTtcbiAgICAgICAgICAgIGRyYXdlci5pb3MuZGVmYXVsdFNpZGVEcmF3ZXIuc3R5bGUuc2hhZG93UmFkaXVzID0gNTtcbiAgICAgICAgICAgIGRyYXdlci5pb3MuZGVmYXVsdFNpZGVEcmF3ZXIudHJhbnNpdGlvbkR1cmF0aW9uID0gMC4yNTtcblx0XHR9XG5cdH1cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHNjaG9vbHNUYXAoKSB7XG4gICAgdmFyIG5hdmlnYXRpb25FbnRyeSA9IHtcbiAgICAgICAgbW9kdWxlTmFtZTogXCJ2aWV3cy9zY2hvb2xzL3NjaG9vbHNcIixcbiAgICAgICAgY29udGV4dDogeyBzZXR0aW5nczogdHJ1ZSB9LFxuICAgICAgICBhbmltYXRlZDogZmFsc2VcbiAgICB9O1xuICAgIHRvcG1vc3QoKS5uYXZpZ2F0ZShuYXZpZ2F0aW9uRW50cnkpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gYWxsZXJnZW5zVGFwKCkge1xuICAgIHZhciBuYXZpZ2F0aW9uRW50cnkgPSB7XG4gICAgICAgIG1vZHVsZU5hbWU6IFwidmlld3MvYWxsZXJnZW5zL2FsbGVyZ2Vuc1wiLFxuICAgICAgICBjb250ZXh0OiB7IHNldHRpbmdzOiB0cnVlIH0sXG4gICAgICAgIGFuaW1hdGVkOiBmYWxzZVxuICAgIH07XG4gICAgdG9wbW9zdCgpLm5hdmlnYXRlKG5hdmlnYXRpb25FbnRyeSk7XG59Il19